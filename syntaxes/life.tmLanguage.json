{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Life (AITD)",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#keywords" },
		{ "include": "#strings" },
		{ "include": "#numbers" },
		{ "include": "#functions" },
		{ "include": "#variables" },
		{ "include": "#types" }
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.number-sign",
					"match": "#.*$",
					"comment": "A comment starting with a number sign."
				},
				{
					"name": "comment.line.fwd-slashes",
					"match": "//.*$",
					"comment": "A comment starting with 2 forward slashes."
				},
				{
					"name": "comment.block.documentation",
					"begin": "^\\s*(-+(?>[^-\\n]+-+)*)$",
					"beginCaptures": { "1": { "name": "punctuation.definition.comment.begin.life" } },
					"end": "^\\s*(-+(?>[^-\\n]+-+)*)$",
					"endCaptures": { "1": { "name": "punctuation.definition.comment.end.life" } },
					"comment": "A comment block starting & ending with a line with optional leading whitespace & bookended by hyphens. comment.block.header.start/end"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.life",
					"match": "\\b(if|while|for|return|switch|case|default|else|end)\\b"
				},
				{
					"name": "keyword.life",
					"match": "\\band\\b"
				},
				{
					"name": "keyword.operator.comparison.life",
					"match": "==|<>|<=|=<|>=|=>"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.life",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.life",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"name": "constant.numeric.life",
			"match": "\\b[0-9]+\\b|-[0-9]+\\b"
		},
		"functions": {
			"patterns": [
				{
					"name": "entity.name.function.life",
					"match": "\\b(anim_(?>(?>all_)?once|repeat|sample|move)|allow_inventory|set|camera_target|delete|do_move|test_col|hit_object|dec|inc|next_music|music|rnd_freq|sound|message|posrel|found|trackmode|do_(?>max|real|rot|carre)_zv|special|dist|hit|in_hand|found_name|read|throw|life_mode|life|sub|add|set_beta|set_alpha|changeroom|angle|found_flag|shaking|water|object|start_chrono|isfound|manual_rot|fire|put|sample_then|(wait_)?game_over|rep_sample|picture|rand|stop_hit_object|end_sequence|copy_angle|def_zv)\\b"
				},
				{
					"name": "entity.name.function.preprocessor.life",
					"match": "\\b(?>take)\\b",
					"comment": "Weird edge cases"
				}
			],
			"name": "entity.name.function.life",
			"match": "\\b(anim_(?>(?>all_)?once|repeat|sample|move)|allow_inventory|set|camera_target|delete|do_move|test_col|hit_object|dec|inc|next_music|music|rnd_freq|sound|message|posrel|found|trackmode|do_(?>max|real|rot|carre)_zv|special|dist|hit|in_hand|found_name|read|throw|life_mode|life|sub|add|set_beta|set_alpha|changeroom|angle|found_flag|shaking|water|object|start_chrono|isfound|manual_rot|fire|put|sample_then|(wait_)?game_over|rep_sample|picture|rand|stop_hit_object|end_sequence|copy_angle|def_zv|test_zv_end_anim)\\b"
		},
		"types": {},
		"variables": {
			"patterns": [
				{
					"name": "variable.name.life",
					"match": "\\b(?>var|obj)_[0-9]+\\b",
					"comment": "Var/obj"
				},
				{
					"name": "variable.name.life",
					"match": "\\b(?>(?>room_)?chrono|player|body|hitforce|(hit|col)_by|anim|flags|end_anim|(trigger|hard|actor)_collider|alpha|beta|stage|roomy?|num_track|inhand|action|keyboard_input|contact|light|mark|falling|found_body|frame)\\b"
				},
				{
					"name": "variable.other.constant.life",
					"match": "\\b(?>E[0-9]+R[0-9]+|alone_in_the_dark_[0-9]+)\\b",
					"comment": "Misc"
				},
				{
					"name": "variable.other.constant.life",
					"match": "\\b(?>book|letter|oil_can|matchbox|key|small_mirror)_[0-9]+\\b",
					"comment": "Items - Generic"
				},
				{
					"name": "variable.other.constant.life",
					"match": "\\b(?>actions_2|rifle_3|old_indian_cover_5|book_12|oil_lamp_13|letter_15|oil_can_16|oil_can_17|box_of_cartridges_18|talisman_110|matchbox_121|key_144|hook_232|gem_268|book_269)\\b",
					"comment": "Items - Specific"
				},
				{
					"name": "entity.name.function.preprocessor.life",
					"match": "\\bcvar_[0-9]+\\b",
					"comment": "CVars variable.other.constant.life"
				},
				{
					"name": "variable.other.enummember.life",
					"match": "\\b((fight|jump|open_or_search|close|push|drop_or_put|throw)|(anim|trig|grav)|none)\\b"
				}
			]
		}
	},
	"scopeName": "source.life"
}